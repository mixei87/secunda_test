services:
  db:
    image: postgres:17-alpine
    container_name: db
    env_file:
      - .env
    ports:
      - "${HOST_DB_PORT}:${POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  app:
    image: secunda_app
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${HOST_API_PORT}:${CONTAINER_API_PORT}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    restart: unless-stopped
volumes:
  pgdata:
networks:
  default:
    name: secunda_net
    driver: bridge
