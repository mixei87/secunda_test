"""initial

Revision ID: 040be57bda81
Revises: 
Create Date: 2025-08-19 11:34:26.405549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '040be57bda81'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('depth', sa.SmallInteger(), nullable=False),
    sa.CheckConstraint('depth >= 1 AND depth <= 3', name=op.f('ck_activity_depth_range')),
    sa.ForeignKeyConstraint(['parent_id'], ['activity.id'], name=op.f('fk_activity_parent_id_activity'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activity')),
    sa.UniqueConstraint('parent_id', 'name', name=op.f('uq_activity_parent_id_name'))
    )
    op.create_table('building',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_building')),
    sa.UniqueConstraint('address', name=op.f('uq_building_address'))
    )
    op.create_index('ix_building_lat_lon', 'building', ['latitude', 'longitude'], unique=False)
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['building.id'], name=op.f('fk_organization_building_id_building'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organization'))
    )
    op.create_index(op.f('ix_organization_name'), 'organization', ['name'], unique=False)
    op.create_table('organizationactivity',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], name=op.f('fk_organizationactivity_activity_id_activity'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], name=op.f('fk_organizationactivity_organization_id_organization'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('organization_id', 'activity_id', name=op.f('pk_organizationactivity'))
    )
    op.create_table('organizationphone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], name=op.f('fk_organizationphone_organization_id_organization'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organizationphone')),
    sa.UniqueConstraint('organization_id', 'phone', name='uq_org_phone')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('organizationphone')
    op.drop_table('organizationactivity')
    op.drop_index(op.f('ix_organization_name'), table_name='organization')
    op.drop_table('organization')
    op.drop_index('ix_building_lat_lon', table_name='building')
    op.drop_table('building')
    op.drop_table('activity')
    # ### end Alembic commands ###
